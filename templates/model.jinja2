from typing import Optional, List

from .base import Base, IDModel, DateTimeModel

class {{ table_name | capitalize }}InCreate(Base):
    {%- for field in fields %}
    {%- if field.name != "id" and not field.default %}
    {{ field.name }}: {{ field.type }}
    {%- endif %}
    {%- endfor %}
    {%- for field in fields %}
    {%- if field.name != "id" and field.default %}
    {{ field.name }}: {% if field.default == "None" %}Optional[{%- endif %}{{ field.type }}{% if field.default == "None" %}]{%- endif %} = {{ field.default }}
    {%- endif %}
    {%- endfor %}


class {{ table_name | capitalize }}InUpdate():
    {%- for field in fields %}
    {%- if field.name != "id" %}
    {{ field.name }}: Optional[{{ field.type }}] = None
    {%- endif %}
    {%- endfor %}

class {{ table_name | capitalize }}InDB({{ table_name | capitalize }}InCreate, IDModel, DateTimeModel):
    """{{ table_name | capitalize }}InDB"""


class {{ table_name | capitalize }}InResponse({{ table_name | capitalize }}InDB):
    """{{ table_name | capitalize }}InResponse"""


class {{ table_name | capitalize }}ListInResponse(Base):
    data: List[{{ table_name | capitalize }}InResponse]
    count: Optional[int] = None

